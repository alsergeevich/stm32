#pragma once
#include <stdio.h>
#include <stdbool.h>
#include <string.h>

/**
 * @brief Структура для обработки результата функции в стиле Rust Result.
 * 
 * Позволяет возвращать либо успешный результат (Ok), либо сообщение об ошибке (Err).
 * Поле is_Ok указывает, содержит ли структура валидный результат.
 * 
 * @note Память, на которую указывает Ok_value, должна быть выделена вызывающей стороной.
 *       Ответственность за освобождение памяти лежит на вызывающем коде.
 */
typedef struct Result
{
    void *Ok_value;      ///< Указатель на успешный результат (если is_Ok == true)
    char Err_message[50]; ///< Сообщение об ошибке (если is_Ok == false)
    bool is_Ok;          ///< Флаг, указывающий на успешность операции
} Result;

/**
 * @brief Создаёт успешный результат.
 * 
 * @param value Указатель на результат. Должен быть валидным указателем.
 * @return Result Структура с установленным флагом is_Ok = true и переданным значением.
 * 
 * @warning value не должен быть NULL. Ответственность за освобождение памяти лежит на вызывающем коде.
 */
Result result_ok(void *const value);

/**
 * @brief Создаёт результат с ошибкой.
 * 
 * @param message Сообщение об ошибке. Если NULL, будет использовано сообщение по умолчанию.
 * @return Result Структура с установленным флагом is_Ok = false и сообщением об ошибке.
 */
Result result_err(char const *const message);